package com.challenge.passValidate.controller;

import static org.mockito.Mockito.when;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;

import com.challenge.passValidate.model.ReturnValidate;
import com.challenge.passValidate.service.PassValidateService;

public class PassValidateControllerTest {
	PassValidateController passValidateController;

    @BeforeEach
    void setup() {
    	PassValidateService passValidateService = Mockito.mock(PassValidateService.class);
    	
    	ReturnValidate retTrue = new ReturnValidate();
    	retTrue.setValidate("true");
    	
    	ReturnValidate retFalse = new ReturnValidate();
    	retTrue.setValidate("false");


    	when(passValidateService.passValidate("AbTp9!fok")).thenReturn(retTrue);
        when(passValidateService.passValidate("AbTp9!foA")).thenReturn(retFalse);
        this.passValidateController = new PassValidateController(passValidateService);
    }

    @Test
    void shouldGetDefaultWelcomeMessage() {
        assertEquals("Welcome Stranger!", welcomeController.welcome("Stranger"));
    }

    @Test
    void shouldGetCustomWelcomeMessage() {
        assertEquals("Welcome John!", welcomeController.welcome("John"));
    }
}
